{"version":3,"file":"static/js/193.c2372002.chunk.js","mappings":"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","sources":["Pages/MovieDetailsPage.jsx","components/Api/Api.jsx"],"sourcesContent":["import { useState,useEffect, Suspense} from \"react\";\nimport { useParams, NavLink, useLocation, Outlet} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { getMovieDetails } from \"components/Api/Api\";\n\n\nconst StyledImg = styled.img`\n    width: 250px;\n`;\n\nconst FilmBox = styled.div`\n    display: grid;\n    margin-bottom: 10px;\n    grid-template-columns: 310px 1fr;\n`;\n\nconst StyledSection = styled.section`\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 2px solid black;\n    border-bottom: 2px solid black;\n`;\n\nconst BackButton = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  padding: 5px;\n  align-items: center;\n  width: 60px;\n  height: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border: 1px solid black;\n  text-decoration: none;\n`;\n\nfunction MovieDetailsPage() {\n    const detailList = ['cast', 'reviews'];\n    const location = useLocation();\n    const linkBack = location?.state?.from || '/';\n    const [movieDetail, setMovieDetail] = useState({});\n\n    const { moviesId } = useParams();\n\n    useEffect(() => { \n        getMovieDetails(setMovieDetail, moviesId)\n    }, [moviesId]);\n\n    if (!movieDetail.hasOwnProperty('title')) return;\n\n    const {title, overview, genres, release_date, vote_average, poster_path } = movieDetail;\n    \n    return (\n                <>\n                    <BackButton type=\"button\" to={linkBack}>{'Go back'}</BackButton>\n                    <FilmBox>\n                        <StyledImg src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n                        <div>\n                            <h3>{`${title} (${release_date})`}</h3>\n                            <p>User Score: {vote_average}%</p>\n                            <h4>Overview</h4>\n                            <p>{overview}</p>\n                            <h5>Genres</h5>\n                            <p>{genres ? genres.map(gen => gen.name).join(', ') : ''}</p>\n                        </div>\n                    </FilmBox>\n                    <StyledSection>\n                        <p>Additional iformation</p>\n                        <ul>\n                            {detailList.map(e => {\n                                return (\n                                    <li key={e}>\n                                        <NavLink to={`${e}`} state={{ from: location?.state?.from }}>{e}</NavLink>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </StyledSection>\n                    <Suspense fallback={null}>\n                      <Outlet />\n                    </Suspense>\n                </>\n    );\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nexport const getList = async (setMoviesList) => {\n    const QUERY_LIST_MOVIES = 'https://api.themoviedb.org/3/movie/top_rated?api_key=de0dccb949912c01edc752d65802c189&language=en-US&page=1';\n    await axios\n      .get(QUERY_LIST_MOVIES)\n        .then(res => {\n         if (res.data.results.length === 0) return;\n         setMoviesList([...res.data.results]);\n        })\n        .catch(e => {\n        console(\"Not list !\");\n        return;\n      });\n}\n\nexport const getMovieDetails = async (setMovieDetails, moviesId) => {\n      const QUERY_MOVIES_DETAILS = `https://api.themoviedb.org/3/movie/${moviesId}?api_key=de0dccb949912c01edc752d65802c189&language=en-US`;\n          return await axios.get(QUERY_MOVIES_DETAILS).then(res => { \n              setMovieDetails(res.data);\n          }).catch(e => {\n          setMovieDetails({});\n        return\n      }); \n}\n\n\nexport const getReviewList = async (setReviewList, moviesId) => {\n    const QUERY_REVIEW = `https://api.themoviedb.org/3/movie/${moviesId}/reviews?api_key=de0dccb949912c01edc752d65802c189&language=en-US&page=1`;\n          return await axios.get(QUERY_REVIEW).then(res => { \n              setReviewList(res.data.results);\n          }).catch(e => {\n          setReviewList([]);\n        return\n      }); \n}\n\nexport const getCasts = async (setCastsList, moviesId) => {\n    const QUERY_CAST = `https://api.themoviedb.org/3/movie/${moviesId}/credits?api_key=de0dccb949912c01edc752d65802c189&language=en-US`;\n          return await axios.get(QUERY_CAST).then(res => { \n              setCastsList(res.data);\n          }).catch(e => {\n          setCastsList({});\n        return\n      }); \n}\n\nexport const getMoviesByWord = async (setMoviesList,search) => {\n    const QUERY_MOVIES_BY_WORD = `https://api.themoviedb.org/3/search/movie?api_key=de0dccb949912c01edc752d65802c189&query=${search}&page=1&language=en-US`;\n          return await axios.get(QUERY_MOVIES_BY_WORD).then(res => { \n            setMoviesList(res.data.results);\n          }).catch(e => {\n          setMoviesList([]);\n        return\n      }); \n}\n"],"names":["StyledImg","styled","FilmBox","StyledSection","BackButton","NavLink","location","useLocation","linkBack","state","from","useState","movieDetail","setMovieDetail","moviesId","useParams","useEffect","getMovieDetails","hasOwnProperty","title","overview","genres","release_date","vote_average","poster_path","type","to","src","alt","map","gen","name","join","e","Suspense","fallback","getList","setMoviesList","axios","then","res","data","results","length","catch","console","setMovieDetails","QUERY_MOVIES_DETAILS","getReviewList","setReviewList","QUERY_REVIEW","getCasts","setCastsList","QUERY_CAST","getMoviesByWord","search","QUERY_MOVIES_BY_WORD"],"sourceRoot":""}