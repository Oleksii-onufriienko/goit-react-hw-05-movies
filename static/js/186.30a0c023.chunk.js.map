{"version":3,"file":"static/js/186.30a0c023.chunk.js","mappings":"wTAEaA,EAAO,mCAAG,WAAOC,GAAP,uEACO,8GADP,SAEbC,EAAAA,EAAAA,IADoB,+GAGrBC,MAAK,SAAAC,GAC2B,IAA5BA,EAAIC,KAAKC,QAAQC,QACrBN,GAAc,OAAIG,EAAIC,KAAKC,SAC3B,IACAE,OAAM,SAAAC,GACPC,QAAQ,aAET,IAXgB,2CAAH,sDAcPC,EAAe,mCAAG,WAAOC,EAAiBC,GAAxB,8EACnBC,EADmB,6CAC0CD,EAD1C,qEAERX,EAAAA,EAAAA,IAAUY,GAAsBX,MAAK,SAAAC,GAC9CQ,EAAgBR,EAAIC,KACvB,IAAEG,OAAM,SAAAC,GACTG,EAAgB,CAAC,EAEpB,IAPwB,mFAAH,wDAWfG,EAAa,mCAAG,WAAOC,EAAeH,GAAtB,8EACnBI,EADmB,6CACkCJ,EADlC,oFAENX,EAAAA,EAAAA,IAAUe,GAAcd,MAAK,SAAAC,GACtCY,EAAcZ,EAAIC,KAAKC,QAC1B,IAAEE,OAAM,SAAAC,GACTO,EAAc,GAEjB,IAPsB,mFAAH,wDAUbE,EAAQ,mCAAG,WAAOC,EAAcN,GAArB,8EACdO,EADc,6CACqCP,EADrC,6EAEDX,EAAAA,EAAAA,IAAUkB,GAAYjB,MAAK,SAAAC,GACpCe,EAAaf,EAAIC,KACpB,IAAEG,OAAM,SAAAC,GACTU,EAAa,CAAC,EAEjB,IAPiB,mFAAH,wDAURE,EAAe,mCAAG,WAAOpB,EAAcqB,GAArB,8EACrBC,EADqB,mGAC8FD,EAD9F,mCAERpB,EAAAA,EAAAA,IAAUqB,GAAsBpB,MAAK,SAAAC,GAChDH,EAAcG,EAAIC,KAAKC,QACxB,IAAEE,OAAM,SAAAC,GACTR,EAAc,GAEjB,IAPwB,mFAAH,uD,8EClB5B,UAzBA,WACI,IAAQY,GAAaW,EAAAA,EAAAA,MAAbX,SACR,GAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACLb,EAAAA,EAAAA,IAAcY,EAAYd,EAC9B,GAAE,CAACA,KAGJ,iCACIa,EAAQnB,OAAS,IAAK,uCACvBmB,EAAQnB,OAAS,IAChB,wBACGmB,EAAQG,KAAI,SAAAC,GAAM,OACjB,gBAAoBA,OAAQA,EAA5B,WACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAU5B,C","sources":["components/Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getList = async (setMoviesList) => {\n    const QUERY_LIST_MOVIES = 'https://api.themoviedb.org/3/movie/top_rated?api_key=de0dccb949912c01edc752d65802c189&language=en-US&page=1';\n    await axios\n      .get(QUERY_LIST_MOVIES)\n        .then(res => {\n         if (res.data.results.length === 0) return;\n         setMoviesList([...res.data.results]);\n        })\n        .catch(e => {\n        console(\"Not list !\");\n        return;\n      });\n}\n\nexport const getMovieDetails = async (setMovieDetails, moviesId) => {\n      const QUERY_MOVIES_DETAILS = `https://api.themoviedb.org/3/movie/${moviesId}?api_key=de0dccb949912c01edc752d65802c189&language=en-US`;\n          return await axios.get(QUERY_MOVIES_DETAILS).then(res => { \n              setMovieDetails(res.data);\n          }).catch(e => {\n          setMovieDetails({});\n        return\n      }); \n}\n\n\nexport const getReviewList = async (setReviewList, moviesId) => {\n    const QUERY_REVIEW = `https://api.themoviedb.org/3/movie/${moviesId}/reviews?api_key=de0dccb949912c01edc752d65802c189&language=en-US&page=1`;\n          return await axios.get(QUERY_REVIEW).then(res => { \n              setReviewList(res.data.results);\n          }).catch(e => {\n          setReviewList([]);\n        return\n      }); \n}\n\nexport const getCasts = async (setCastsList, moviesId) => {\n    const QUERY_CAST = `https://api.themoviedb.org/3/movie/${moviesId}/credits?api_key=de0dccb949912c01edc752d65802c189&language=en-US`;\n          return await axios.get(QUERY_CAST).then(res => { \n              setCastsList(res.data);\n          }).catch(e => {\n          setCastsList({});\n        return\n      }); \n}\n\nexport const getMoviesByWord = async (setMoviesList,search) => {\n    const QUERY_MOVIES_BY_WORD = `https://api.themoviedb.org/3/search/movie?api_key=de0dccb949912c01edc752d65802c189&query=${search}&page=1&language=en-US`;\n          return await axios.get(QUERY_MOVIES_BY_WORD).then(res => { \n            setMoviesList(res.data.results);\n          }).catch(e => {\n          setMoviesList([]);\n        return\n      }); \n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewList } from 'components/Api/Api';\n\nfunction Reviews() {\n    const { moviesId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n         getReviewList(setReviews, moviesId);\n    }, [moviesId]);\n\n    return (\n    <>\n      {!reviews.length > 0 && <h3>No reviews</h3>}\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id} review={review}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;"],"names":["getList","setMoviesList","axios","then","res","data","results","length","catch","e","console","getMovieDetails","setMovieDetails","moviesId","QUERY_MOVIES_DETAILS","getReviewList","setReviewList","QUERY_REVIEW","getCasts","setCastsList","QUERY_CAST","getMoviesByWord","search","QUERY_MOVIES_BY_WORD","useParams","useState","reviews","setReviews","useEffect","map","review","author","content","id"],"sourceRoot":""}